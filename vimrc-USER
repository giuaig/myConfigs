"https://www.digitalocean.com/community/tutorials/how-to-use-vundle-to-manage-vim-plugins-on-a-linux-vps
"INSTALL-VUNDLE: git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
"
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" This is the Vundle package, which can be found on GitHub.
" For GitHub repos, you specify plugins using the
" 'user/repository' format
Plugin 'gmarik/vundle'

"NerdTree
Plugin 'scrooloose/nerdtree.git'
"Block Commenter
Plugin 'scrooloose/nerdcommenter'

"NerdTree GIT flags
Plugin 'xuyuanp/nerdtree-git-plugin'

" To get plugins from Vim Scripts, you can reference the plugin
" by name as it appears on the site
Plugin 'Buffergator'

"Full path fuzzy file finder
Plugin 'ctrlpvim/ctrlp.vim'

"Git wrapper
Plugin 'tpope/vim-fugitive'

"Git diff
Plugin 'airblade/vim-gitgutter'

"
Plugin 'pearofducks/ansible-vim'

"Show HTML color -NON FUNZIONA-
"Plugin 'lilydjwg/colorizer'
"Plugin 'chrisbra/colorizer'

"Highlights the word under the cursor
Plugin 'RRethy/vim-illuminate'

"Pulse everytime you scroll the search results
Plugin 'inside/vim-search-pulse'

"
Plugin 'ekalinin/Dockerfile.vim'

"Show indent lines
Plugin 'nathanaelkane/vim-indent-guides'
let g:indent_guides_guide_size = 1

"
" Now we can turn our filetype functionality back on
filetype plugin indent on

"
" NerdTree plugin
"
"Open a NERDTree automatically when vim starts up if no files were specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
"Close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif 
"Ctrl+n shortcut
map <C-n> :NERDTreeToggle<CR>
"NerdTree File Highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
 exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
 exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction

"Automatically close NerdTree when opening a file
"let NERDTreeQuitOnOpen = 1

call NERDTreeHighlightFile('jade', 'green', 'none', 'green', '#151515')
call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', '#151515')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', '#151515')

""""""""""""""""""""""""""""
" => Statusline
"""""""""""""""""""""""""""" 
"set statusline=\ %F%m%r%h%w%y[%p%%][%l,%L/%v] 

" Always hide the statusline
set laststatus=2

"set statusline=%t      "tail of the filename
set statusline=%F       "file path 
set statusline+=%m      "modified flag
set statusline+=%h      "help file flag
set statusline+=%r      "read only flag 
set statusline+=%w      "preview window flag 
set statusline+=\ [%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}] "file format
set statusline+=%y      "filetype 
set statusline+=[buf:%n]        "buffer number
set statusline+=%{FugitiveStatusline()}	"add GIT branch
set statusline+=%=      "left/right separator
set statusline+=[l:\ %l/%L]   "cursor line/total lines
set statusline+=[c:\ %c]     "cursor column
set statusline+=\ %p%%   "percent through file
